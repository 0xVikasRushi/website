<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AsyncAPI Initiative</title>
    <link>https://www.asyncapi.com/</link>
    <description>Recent content on AsyncAPI Initiative</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Feb 2019 17:41:57 +0100</lastBuildDate>
    
	<atom:link href="https://www.asyncapi.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AsyncAPI specification 2.0.0-rc1</title>
      <link>https://www.asyncapi.com/docs/specifications/2.0.0-rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.asyncapi.com/docs/specifications/2.0.0-rc1/</guid>
      <description>Choose another version: | 2.0.0-rc1 | 1.2.0 | 1.1.0 | 1.0.0 |  Disclaimer Part of this content has been taken from the great work done by the folks at the OpenAPI Initiative. Mainly because it&amp;rsquo;s a great work and we want to keep as much compatibility as possible with the OpenAPI Specification.
Version 2.0.0-rc1 The key words &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, and &amp;ldquo;OPTIONAL&amp;rdquo; in this document are to be interpreted as described in RFC 2119.</description>
    </item>
    
    <item>
      <title>AsyncAPI specification 1.2.0</title>
      <link>https://www.asyncapi.com/docs/specifications/1.2.0/</link>
      <pubDate>Sat, 16 Feb 2019 17:41:57 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/docs/specifications/1.2.0/</guid>
      <description>Choose another version: | 2.0.0-rc1 | 1.2.0 | 1.1.0 | 1.0.0 |  Disclaimer Part of this content has been taken from the great work done by the folks at the OpenAPI Initiative. Mainly because it&amp;rsquo;s a great work and we want to keep as much compatibility as possible with the OpenAPI Specification.
Version 1.2.0 The key words &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, and &amp;ldquo;OPTIONAL&amp;rdquo; in this document are to be interpreted as described in RFC 2119.</description>
    </item>
    
    <item>
      <title>AsyncAPI specification 1.1.0</title>
      <link>https://www.asyncapi.com/docs/specifications/1.1.0/</link>
      <pubDate>Sat, 16 Feb 2019 17:41:57 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/docs/specifications/1.1.0/</guid>
      <description>Choose another version: | 2.0.0-rc1 | 1.2.0 | 1.1.0 | 1.0.0 |  Disclaimer Part of this content has been taken from the great work done by the folks at the Open API Initiative. Mainly because it&amp;rsquo;s a great work and we want to keep as much compatibility as possible with the Open API Specification.
Version 1.1.0 The key words &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, and &amp;ldquo;OPTIONAL&amp;rdquo; in this document are to be interpreted as described in RFC 2119.</description>
    </item>
    
    <item>
      <title>AsyncAPI specification 1.0.0</title>
      <link>https://www.asyncapi.com/docs/specifications/1.0.0/</link>
      <pubDate>Sat, 16 Feb 2019 17:41:57 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/docs/specifications/1.0.0/</guid>
      <description>Choose another version: | 2.0.0-rc1 | 1.2.0 | 1.1.0 | 1.0.0 |  Disclaimer Part of this content has been taken from the great work done by the folks at the Open API Initiative. Mainly because it&amp;rsquo;s a great work and we want to keep as much compatibility as possible with the Open API Specification.
Version 1.0.0 The key words &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, and &amp;ldquo;OPTIONAL&amp;rdquo; in this document are to be interpreted as described in RFC 2119.</description>
    </item>
    
    <item>
      <title>Replicating the Success of REST in Event-Driven Architecture</title>
      <link>https://www.asyncapi.com/blog/replicating-success-rest-event-driven-architecture/</link>
      <pubDate>Thu, 04 Apr 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/replicating-success-rest-event-driven-architecture/</guid>
      <description>This post is a collaboration between Fran Méndez of AsyncAPI and Solace’s Jonathan Schabowsky. It was originally published at Solace’s blog.
Jonathan explained in his last blog post how the loose coupling of applications associated with event-driven architecture and publish/subscribe messaging is both a strength and a weakness. As part of that, he touched on the fact that request/reply interactions using RESTful APIs are still the dominant application integration paradigm, even in hybrid cloud, machine learning and IoT use cases that benefit from event-driven interactions.</description>
    </item>
    
    <item>
      <title>Organizing your AsyncAPI documents</title>
      <link>https://www.asyncapi.com/blog/organizing-asyncapi-documents/</link>
      <pubDate>Fri, 01 Mar 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/organizing-asyncapi-documents/</guid>
      <description>A recurring question that I get very often is: “how do I organize my AsyncAPI documents?”. Also, the related one: “I have two services, a publisher and a consumer, should I define both in the same AsyncAPI document?”.
Let’s break down some best practices and tips to avoid ending up in a hell of unmanageable documents.
Organizing Microservices  I’m using the term microservices here because it’s the most common type of distributed architecture that you can find nowadays.</description>
    </item>
    
    <item>
      <title>Status update (week 15, 2019)</title>
      <link>https://www.asyncapi.com/blog/status-update-week-15-2019/</link>
      <pubDate>Thu, 11 Apr 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/status-update-week-15-2019/</guid>
      <description>Kaixo lagunak! This week we continued working on the parser as it’s a top priority for us. We made significant progress and plan to release a simple but functional version soon.
Building the parser  We’ve added support for AsyncAPI 1.x/OpenAPI schemas. This is the first step before we dive into Avro and Protobuf support. Updated the Node.js to automatically test itself on Linux, Mac, and Windows. We’re still struggling to debug some failures on Windows so we encourage people who work on this operating system to join and help us test.</description>
    </item>
    
    <item>
      <title>Status update (week 14, 2019)</title>
      <link>https://www.asyncapi.com/blog/status-update-week-14-2019/</link>
      <pubDate>Thu, 04 Apr 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/status-update-week-14-2019/</guid>
      <description>Hallo meine Freunde! This week we’ve done great progress on tooling and documentation. It will be our main focus for the next month. In the meantime, check out what we did last week. Read on!
Improvements on documentation  Check out version 2.0.0-rc1 of the specification in our website: https://www.asyncapi.com/docs/specifications/2.0.0-rc1/. Added a “Hello world” article to our getting started guide: https://github.com/asyncapi/asyncapi.github.io/pull/3. Added a “Servers” article to our getting started guide, explaining how the “servers” section of AsyncAPI works: https://github.</description>
    </item>
    
    <item>
      <title>Streetlights</title>
      <link>https://www.asyncapi.com/docs/tutorials/streetlights/</link>
      <pubDate>Sat, 16 Feb 2019 17:41:57 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/docs/tutorials/streetlights/</guid>
      <description>&lt;p&gt;In this tutorial I want to help you get started with actual code and a (could-be) real world use case.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.asyncapi.com/about/</link>
      <pubDate>Sat, 16 Feb 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/about/</guid>
      <description>Maintainers and Contributors Fran Méndez is currently the project director.
Current maintainers are Mike Ralphson and Raisel Melian.
So far, we have had many contributors and we are thankful for their time and help. Until the day of this writing, main contributors are:
 Bruno Pedro Chris Wood Dulce De La Rosa Emmelyn Wang Jonathan Schabowsky Kin Lane Lukasz Gornicki Maciej Urbańczyk  Would you like to contribute? Check out our contributing guidelines.</description>
    </item>
    
    <item>
      <title>Tooling</title>
      <link>https://www.asyncapi.com/docs/tooling/</link>
      <pubDate>Sat, 16 Feb 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/docs/tooling/</guid>
      <description>&lt;p&gt;This page contains a list of AsyncAPI tooling. Would you like to add your tool to this list? &lt;a href=&#34;https://github.com/asyncapi/asyncapi/issues/new&#34; target=&#34;_blank&#34;&gt;Let us know!&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>